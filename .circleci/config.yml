version: 2.1
jobs:
  build:
    docker:
      - image: python:3.9-alpine
    steps:
      - run: 
          name:  Install dependencies
          command: |
            apk add make tar git gcc wget
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/project/requirements.txt" }}which
          # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Prepare environment
          command: |
            make setup
            make install
      - save_cache:
          key: v1-dependencies-{{ checksum "~/project/requirements.txt" }}
          paths:
            - ~/.venv
      - run:
          name: Run lint
          command: |
            make lint 
  build-image:
    #machine: true
    docker:
      - image: amazon/aws-cli 
    #docker:
    #  - image: cimg/base:2021.05  
    steps:
      - run:
          name: installing packeges
          command: |
            amazon-linux-extras enable docker
            yum install -y tar git docker
      - checkout
      #- run: sudo apt-get update && sudo apt-get install -y awscli
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build docker Image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            FULLTAG=catgifs-${TAG}
            echo "docker build $FULLTAG:"
            docker build -t ${FULLTAG} .
            aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com
            echo "docker tag:"
            docker tag ${FULLTAG} ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${FULLTAG}
            echo "docker image:"
            docker image ls
            echo "docker push:" 
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${FULLTAG} 
      #- setup_remote_docker:
       #   version: 19.03.13
       #   docker_layer_caching: true
workflows:
  default:
    jobs:
      #- build
     #- build-image:
      #    requires:
      #      - "build"
      - build-image