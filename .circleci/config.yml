version: 2.1
commands:
  set-environment:
    steps:
      - run:
          name: Set environment variable
          command: |
            VERSION=0.1
            TAG=$VERSION-${CIRCLE_WORKFLOW_ID:0:7}
            IMAGEWITHTAG=catgifs:$TAG
            echo "export VERSION=${VERSION}" >> $BASH_ENV
            echo "export TAG=${TAG}" >> $BASH_ENV
            echo "export IMAGEWITHTAG=${IMAGEWITHTAG}" >> $BASH_ENV
jobs:
  build:
    docker:
      - image: python:3.9-alpine
    steps:
      - run: 
          name:  Install dependencies
          command: |
            apk add make tar git gcc wget
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/project/requirements.txt" }}which
          # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Prepare environment
          command: |
            make setup
            make install
      - save_cache:
          key: v1-dependencies-{{ checksum "~/project/requirements.txt" }}
          paths:
            - ~/.venv
      - run:
          name: Run lint
          command: |
            make lint 
  build-image:
    #machine: true
    docker:
      - image: amazon/aws-cli 
    #docker:
    #  - image: cimg/base:2021.05  
    steps:
      - set-environment
      - run:
          name: installing packages
          command: |
            amazon-linux-extras enable docker
            yum install -y tar git docker
      - checkout
      - run:
          name: Add build number to index.html
          command: |
            sed -i -e "s/workflowid/$TAG/g" templates/index.html 
      #- run: sudo apt-get update && sudo apt-get install -y awscli
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build docker Image
          command: |
            docker build -t ${IMAGEWITHTAG} .
            aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com
            docker tag ${IMAGEWITHTAG} ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${IMAGEWITHTAG}
            docker image ls
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${IMAGEWITHTAG} 
  update-image:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - set-environment
      - run:
          name:
          command: |
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv kubectl /usr/local/bin
            kubectl version --short --client
            aws eks update-kubeconfig --name ${AWS_CLUSTER_NAME}
            kubectl set image deployments catgifs  catgifs=${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${IMAGEWITHTAG}    
workflows:
  default:
    jobs:
      #- build
     #- build-image:
      #    requires:
      #      - "build"
      - build-image
      - update-image:
          requires:
            - "build-image"